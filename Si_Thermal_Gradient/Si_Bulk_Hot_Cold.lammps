# 1) Initialization
units metal                     # Using metal units
dimension 3                     # 3D simulation
boundary f p p                  # Periodic boundary conditions in y & z, fixed in x
atom_style atomic               # Simple atomic style (no bonds or angles, that info should be included in interatomic potential file)





# 2) System definition
# Read the atomic structure from the xyz file
# The box dimensions are defined by you in the xyz file
read_data Silicon_supercell_200x50x50.data  # Replace with the path to your xyz file

# Define atomic mass of Silicon
mass 1 28.0855  # Atomic mass of silicon

# Define the hot, cold, and middle regions based on the simulation box
region hot_region block 0 40 0 50 0 50 units box   # Leftmost region x direction (hot region)
region cold_region block 160 200 0 50 0 50 units box # Rightmost region in x direction (cold region)
region middle_region block 40 160 0 50 0 50 units box # Middle section (everything in between)

# Group the atoms in these regions
group hot_atoms region hot_region
group cold_atoms region cold_region
group middle_atoms region middle_region







# 3) Simulation settings
# Set the interatomic potential (modified Tersoff potential for silicon)
pair_style tersoff/mod
pair_coeff * * Si.tersoff.mod Si  # Apply the Tersoff potential to silicon from https://www.ctcms.nist.gov/potentials/system/Si/

# Set initial velocities
velocity hot_atoms create 1000 12345 mom yes rot yes dist gaussian  # High temperature for hot region
velocity cold_atoms create 300 67890 mom yes rot yes dist gaussian  # Low (room) temperature for cold region



fix 1 hot_atoms nvt temp 1000.0 1000.0 0.1  # Apply thermostat to hot region, NVT ensemble
fix 2 cold_atoms nvt temp 300.0 300.0 0.1  # Apply thermostat to cold region, NVT ensemble
fix 3 middle_atoms nve  # Apply NVE to the middle region (no thermostat), NVE ensemble








# 4) Compute and output the temperature profile at final timestep

# Bin atoms along the x-direction into chunks of width 10.0
compute myChunk all chunk/atom bin/1d x lower 10.0

# Compute the temperature profile
fix temp_profile all ave/chunk 1 1000000 1000000 myChunk temp file temp_profile.txt







# 5) Compute the heat flux for the middle region
# Define necessary computes for heat flux
compute ke_middle middle_atoms ke/atom              # Kinetic energy per atom in middle region
compute pe_middle middle_atoms pe/atom              # Potential energy per atom in middle region
compute stress_middle middle_atoms centroid/stress/atom NULL # Stress per atom in middle region

# Compute the total heat flux in the middle region
compute heat_flux_middle middle_atoms heat/flux ke_middle pe_middle stress_middle

# Define the heat flux in the x-direction for the middle region
variable J_middle equal c_heat_flux_middle[1]       # Heat flux component in the x-direction for middle region

# Output the heat flux value for the middle region to a file
fix heat_flux_output_middle all print 100 "${J_middle}" file heat_flux_output_middle.txt screen no





# 6) Compute total energy of middle atoms (kinetic + potential)
compute total_ke_middle middle_atoms reduce sum c_ke_middle  # Sum of kinetic energy for middle atoms
compute total_pe_middle middle_atoms reduce sum c_pe_middle  # Sum of potential energy for middle atoms

# Store the results of the computes in variables
variable ke_sum_middle equal c_total_ke_middle
variable pe_sum_middle equal c_total_pe_middle

# Output kinetic and potential energy separately to a different text file
fix energy_output_middle all print 100 "${ke_sum_middle}, ${pe_sum_middle}" file energy_output_middle.txt screen no





# 7) Dump the trajectory for visualization
# Output a trajectory file every 1000 timesteps for visualization in VMD
dump 1 all atom 1000 dump.lammpstrj






# 8) Run the simulation
timestep 0.001
run 5000000  # Run for a long enough time to reach steady-state
